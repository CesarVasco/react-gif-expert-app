{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","state","type","value","onChange","data","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","gifs","map","img","id","images","downsized_medium","GifGrid","loading","setstate","useEffect","then","catch","error","console","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAP,GAAC,OAlBaQ,EAkBSR,EAAES,OAAOH,WAjB5CR,EAAcU,GADW,IAACA,Q,QCJfE,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACpC,OACC,sBAAKC,UAAU,yCAAf,UACC,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNMK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,iDACgCO,UAAUF,GAD1C,+DAGCG,MAAMR,GAHP,cAGhBS,EAHgB,gBAICA,EAASC,OAJV,uBAIdd,EAJc,EAIdA,KAEFe,EAAOf,EAAKgB,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,OAAEa,QAAF,IAAEA,GAAF,UAAEA,EAAKE,cAAP,aAAE,EAAaC,iBAAiBhB,QAVf,kBAcfW,GAde,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SACzB,ECF2B,SAACA,GAC5B,MAA0BrB,mBAAS,CAClCY,KAAM,GACNsB,SAAS,IAFV,mBAAO1B,EAAP,KAAc2B,EAAd,KAqBA,OAhBAC,qBAAU,WACThB,EAAQC,GAAUgB,MAAK,SAAAN,GACtBI,EAAS,CACRvB,KAAMmB,EACNG,SAAS,OAGVI,OAAM,SAAAC,GACNC,QAAQD,MAAMA,GACdJ,EAAS,CACRvB,KAAMJ,EAAMI,KACZsB,SAAS,UAKL1B,EDpB2BiC,CAAapB,GAAjCU,EAAd,EAAQnB,KAAcsB,EAAtB,EAAsBA,QAEtB,OACC,qCACC,oBAAIjB,UAAU,oCAAd,SAAmDI,IAElDa,GAAW,mBAAGjB,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEEc,EAAOH,KAAI,SAAAC,GACV,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEZtBY,EAAe,WAC3B,MAAoC1C,mBAAS,CAAC,kBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEE4C,EAAWf,KAAI,SAAAP,GAAQ,OACtB,cAAC,EAAD,CAECA,SAAUA,GADLA,Y,MCjBZuB,IAASC,OACR,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cb85cbb7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (data) => {\r\n\t\tsetInputValue(data);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif(inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(state => [inputValue, ...state]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={e => handleInputChange(e.target.value)}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=UNqeCIcVsApwt9etX7V3aZbp11pyYi0I`;\r\n\r\n\tconst response = await fetch(url);\r\n\tconst { data } = await response.json();\r\n\r\n\tconst gifs = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img?.images?.downsized_medium.url\r\n\t\t}\r\n\t});\r\n\r\n\treturn gifs; //Promesa\r\n};","//import React, { useState, useEffect } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\t\t\t\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map(img => {\r\n\t\t\t\t\t\treturn <GifGridItem key={img.id} {...img} />\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then(images => {\r\n\t\t\tsetstate({\r\n\t\t\t\tdata: images,\r\n\t\t\t\tloading: false\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t\tsetstate({\r\n\t\t\t\tdata: state.data,\r\n\t\t\t\tloading: false\r\n\t\t\t})\r\n\t\t});\r\n\t});\r\n\r\n\treturn state;\r\n}","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['Mortal Kombat']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \t//setCategories([...categories, 'Death Note']);\r\n\t// \tsetCategories(categories => [...categories, 'Death Note']);\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map(category =>\r\n\t\t\t\t\t\t<GifGrid\r\n\t\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\t<GifExpertApp />,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}